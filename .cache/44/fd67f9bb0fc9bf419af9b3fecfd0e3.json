{"id":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","dependencies":[{"name":"/home/arthur/Desktop/my-webauth-app/package.json","includedInParent":true,"mtime":1740038308393},{"name":"/home/arthur/Desktop/my-webauth-app/node_modules/better-sqlite3-multiple-ciphers/package.json","includedInParent":true,"mtime":1740036653603},{"name":"fs","loc":{"line":2,"column":19,"index":34},"parent":"/home/arthur/Desktop/my-webauth-app/node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","resolved":"/home/arthur/.nvm/versions/node/v22.9.0/lib/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"path","loc":{"line":3,"column":21,"index":63},"parent":"/home/arthur/Desktop/my-webauth-app/node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","resolved":"/home/arthur/.nvm/versions/node/v22.9.0/lib/node_modules/parcel-bundler/node_modules/path-browserify/index.js"},{"name":"util","loc":{"line":4,"column":30,"index":103},"parent":"/home/arthur/Desktop/my-webauth-app/node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","resolved":"/home/arthur/.nvm/versions/node/v22.9.0/lib/node_modules/parcel-bundler/node_modules/util/util.js"},{"name":"../util","loc":{"line":5,"column":26,"index":139},"parent":"/home/arthur/Desktop/my-webauth-app/node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","resolved":"/home/arthur/Desktop/my-webauth-app/node_modules/better-sqlite3-multiple-ciphers/lib/util.js"}],"generated":{"js":"'use strict';\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst { promisify } = require('util');\r\nconst { cppdb } = require('../util');\r\nconst fsAccess = promisify(fs.access);\r\n\r\nmodule.exports = async function backup(filename, options) {\r\n\tif (options == null) options = {};\r\n\r\n\t// Validate arguments\r\n\tif (typeof filename !== 'string') throw new TypeError('Expected first argument to be a string');\r\n\tif (typeof options !== 'object') throw new TypeError('Expected second argument to be an options object');\r\n\r\n\t// Interpret options\r\n\tfilename = filename.trim();\r\n\tconst attachedName = 'attached' in options ? options.attached : 'main';\r\n\tconst handler = 'progress' in options ? options.progress : null;\r\n\r\n\t// Validate interpreted options\r\n\tif (!filename) throw new TypeError('Backup filename cannot be an empty string');\r\n\tif (filename === ':memory:') throw new TypeError('Invalid backup filename \":memory:\"');\r\n\tif (typeof attachedName !== 'string') throw new TypeError('Expected the \"attached\" option to be a string');\r\n\tif (!attachedName) throw new TypeError('The \"attached\" option cannot be an empty string');\r\n\tif (handler != null && typeof handler !== 'function') throw new TypeError('Expected the \"progress\" option to be a function');\r\n\r\n\t// Make sure the specified directory exists\r\n\tawait fsAccess(path.dirname(filename)).catch(() => {\r\n\t\tthrow new TypeError('Cannot save backup because the directory does not exist');\r\n\t});\r\n\r\n\tconst isNewFile = await fsAccess(filename).then(() => false, () => true);\r\n\treturn runBackup(this[cppdb].backup(this, attachedName, filename, isNewFile), handler || null);\r\n};\r\n\r\nconst runBackup = (backup, handler) => {\r\n\tlet rate = 0;\r\n\tlet useDefault = true;\r\n\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetImmediate(function step() {\r\n\t\t\ttry {\r\n\t\t\t\tconst progress = backup.transfer(rate);\r\n\t\t\t\tif (!progress.remainingPages) {\r\n\t\t\t\t\tbackup.close();\r\n\t\t\t\t\tresolve(progress);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (useDefault) {\r\n\t\t\t\t\tuseDefault = false;\r\n\t\t\t\t\trate = 100;\r\n\t\t\t\t}\r\n\t\t\t\tif (handler) {\r\n\t\t\t\t\tconst ret = handler(progress);\r\n\t\t\t\t\tif (ret !== undefined) {\r\n\t\t\t\t\t\tif (typeof ret === 'number' && ret === ret) rate = Math.max(0, Math.min(0x7fffffff, Math.round(ret)));\r\n\t\t\t\t\t\telse throw new TypeError('Expected progress callback to return a number or undefined');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsetImmediate(step);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tbackup.close();\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}}],"sources":{"node_modules/better-sqlite3-multiple-ciphers/lib/methods/backup.js":"'use strict';\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst { promisify } = require('util');\r\nconst { cppdb } = require('../util');\r\nconst fsAccess = promisify(fs.access);\r\n\r\nmodule.exports = async function backup(filename, options) {\r\n\tif (options == null) options = {};\r\n\r\n\t// Validate arguments\r\n\tif (typeof filename !== 'string') throw new TypeError('Expected first argument to be a string');\r\n\tif (typeof options !== 'object') throw new TypeError('Expected second argument to be an options object');\r\n\r\n\t// Interpret options\r\n\tfilename = filename.trim();\r\n\tconst attachedName = 'attached' in options ? options.attached : 'main';\r\n\tconst handler = 'progress' in options ? options.progress : null;\r\n\r\n\t// Validate interpreted options\r\n\tif (!filename) throw new TypeError('Backup filename cannot be an empty string');\r\n\tif (filename === ':memory:') throw new TypeError('Invalid backup filename \":memory:\"');\r\n\tif (typeof attachedName !== 'string') throw new TypeError('Expected the \"attached\" option to be a string');\r\n\tif (!attachedName) throw new TypeError('The \"attached\" option cannot be an empty string');\r\n\tif (handler != null && typeof handler !== 'function') throw new TypeError('Expected the \"progress\" option to be a function');\r\n\r\n\t// Make sure the specified directory exists\r\n\tawait fsAccess(path.dirname(filename)).catch(() => {\r\n\t\tthrow new TypeError('Cannot save backup because the directory does not exist');\r\n\t});\r\n\r\n\tconst isNewFile = await fsAccess(filename).then(() => false, () => true);\r\n\treturn runBackup(this[cppdb].backup(this, attachedName, filename, isNewFile), handler || null);\r\n};\r\n\r\nconst runBackup = (backup, handler) => {\r\n\tlet rate = 0;\r\n\tlet useDefault = true;\r\n\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetImmediate(function step() {\r\n\t\t\ttry {\r\n\t\t\t\tconst progress = backup.transfer(rate);\r\n\t\t\t\tif (!progress.remainingPages) {\r\n\t\t\t\t\tbackup.close();\r\n\t\t\t\t\tresolve(progress);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (useDefault) {\r\n\t\t\t\t\tuseDefault = false;\r\n\t\t\t\t\trate = 100;\r\n\t\t\t\t}\r\n\t\t\t\tif (handler) {\r\n\t\t\t\t\tconst ret = handler(progress);\r\n\t\t\t\t\tif (ret !== undefined) {\r\n\t\t\t\t\t\tif (typeof ret === 'number' && ret === ret) rate = Math.max(0, Math.min(0x7fffffff, Math.round(ret)));\r\n\t\t\t\t\t\telse throw new TypeError('Expected progress callback to return a number or undefined');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsetImmediate(step);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tbackup.close();\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n};\r\n"},"lineCount":68}},"error":null,"hash":"44407532832ee9b8bb4bb70b956c9148","cacheData":{"env":{}}}