{"id":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","dependencies":[{"name":"/home/arthur/Desktop/my-webauth-app/package.json","includedInParent":true,"mtime":1740038308393},{"name":"/home/arthur/Desktop/my-webauth-app/node_modules/better-sqlite3-multiple-ciphers/package.json","includedInParent":true,"mtime":1740036653603},{"name":"../util","loc":{"line":2,"column":26,"index":41},"parent":"/home/arthur/Desktop/my-webauth-app/node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","resolved":"/home/arthur/Desktop/my-webauth-app/node_modules/better-sqlite3-multiple-ciphers/lib/util.js"}],"generated":{"js":"'use strict';\r\nconst { cppdb } = require('../util');\r\nconst controllers = new WeakMap();\r\n\r\nmodule.exports = function transaction(fn) {\r\n\tif (typeof fn !== 'function') throw new TypeError('Expected first argument to be a function');\r\n\r\n\tconst db = this[cppdb];\r\n\tconst controller = getController(db, this);\r\n\tconst { apply } = Function.prototype;\r\n\r\n\t// Each version of the transaction function has these same properties\r\n\tconst properties = {\r\n\t\tdefault: { value: wrapTransaction(apply, fn, db, controller.default) },\r\n\t\tdeferred: { value: wrapTransaction(apply, fn, db, controller.deferred) },\r\n\t\timmediate: { value: wrapTransaction(apply, fn, db, controller.immediate) },\r\n\t\texclusive: { value: wrapTransaction(apply, fn, db, controller.exclusive) },\r\n\t\tdatabase: { value: this, enumerable: true },\r\n\t};\r\n\r\n\tObject.defineProperties(properties.default.value, properties);\r\n\tObject.defineProperties(properties.deferred.value, properties);\r\n\tObject.defineProperties(properties.immediate.value, properties);\r\n\tObject.defineProperties(properties.exclusive.value, properties);\r\n\r\n\t// Return the default version of the transaction function\r\n\treturn properties.default.value;\r\n};\r\n\r\n// Return the database's cached transaction controller, or create a new one\r\nconst getController = (db, self) => {\r\n\tlet controller = controllers.get(db);\r\n\tif (!controller) {\r\n\t\tconst shared = {\r\n\t\t\tcommit: db.prepare('COMMIT', self, false),\r\n\t\t\trollback: db.prepare('ROLLBACK', self, false),\r\n\t\t\tsavepoint: db.prepare('SAVEPOINT `\\t_bs3.\\t`', self, false),\r\n\t\t\trelease: db.prepare('RELEASE `\\t_bs3.\\t`', self, false),\r\n\t\t\trollbackTo: db.prepare('ROLLBACK TO `\\t_bs3.\\t`', self, false),\r\n\t\t};\r\n\t\tcontrollers.set(db, controller = {\r\n\t\t\tdefault: Object.assign({ begin: db.prepare('BEGIN', self, false) }, shared),\r\n\t\t\tdeferred: Object.assign({ begin: db.prepare('BEGIN DEFERRED', self, false) }, shared),\r\n\t\t\timmediate: Object.assign({ begin: db.prepare('BEGIN IMMEDIATE', self, false) }, shared),\r\n\t\t\texclusive: Object.assign({ begin: db.prepare('BEGIN EXCLUSIVE', self, false) }, shared),\r\n\t\t});\r\n\t}\r\n\treturn controller;\r\n};\r\n\r\n// Return a new transaction function by wrapping the given function\r\nconst wrapTransaction = (apply, fn, db, { begin, commit, rollback, savepoint, release, rollbackTo }) => function sqliteTransaction() {\r\n\tlet before, after, undo;\r\n\tif (db.inTransaction) {\r\n\t\tbefore = savepoint;\r\n\t\tafter = release;\r\n\t\tundo = rollbackTo;\r\n\t} else {\r\n\t\tbefore = begin;\r\n\t\tafter = commit;\r\n\t\tundo = rollback;\r\n\t}\r\n\tbefore.run();\r\n\ttry {\r\n\t\tconst result = apply.call(fn, this, arguments);\r\n\t\tafter.run();\r\n\t\treturn result;\r\n\t} catch (ex) {\r\n\t\tif (db.inTransaction) {\r\n\t\t\tundo.run();\r\n\t\t\tif (undo !== rollback) after.run();\r\n\t\t}\r\n\t\tthrow ex;\r\n\t}\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}}],"sources":{"node_modules/better-sqlite3-multiple-ciphers/lib/methods/transaction.js":"'use strict';\r\nconst { cppdb } = require('../util');\r\nconst controllers = new WeakMap();\r\n\r\nmodule.exports = function transaction(fn) {\r\n\tif (typeof fn !== 'function') throw new TypeError('Expected first argument to be a function');\r\n\r\n\tconst db = this[cppdb];\r\n\tconst controller = getController(db, this);\r\n\tconst { apply } = Function.prototype;\r\n\r\n\t// Each version of the transaction function has these same properties\r\n\tconst properties = {\r\n\t\tdefault: { value: wrapTransaction(apply, fn, db, controller.default) },\r\n\t\tdeferred: { value: wrapTransaction(apply, fn, db, controller.deferred) },\r\n\t\timmediate: { value: wrapTransaction(apply, fn, db, controller.immediate) },\r\n\t\texclusive: { value: wrapTransaction(apply, fn, db, controller.exclusive) },\r\n\t\tdatabase: { value: this, enumerable: true },\r\n\t};\r\n\r\n\tObject.defineProperties(properties.default.value, properties);\r\n\tObject.defineProperties(properties.deferred.value, properties);\r\n\tObject.defineProperties(properties.immediate.value, properties);\r\n\tObject.defineProperties(properties.exclusive.value, properties);\r\n\r\n\t// Return the default version of the transaction function\r\n\treturn properties.default.value;\r\n};\r\n\r\n// Return the database's cached transaction controller, or create a new one\r\nconst getController = (db, self) => {\r\n\tlet controller = controllers.get(db);\r\n\tif (!controller) {\r\n\t\tconst shared = {\r\n\t\t\tcommit: db.prepare('COMMIT', self, false),\r\n\t\t\trollback: db.prepare('ROLLBACK', self, false),\r\n\t\t\tsavepoint: db.prepare('SAVEPOINT `\\t_bs3.\\t`', self, false),\r\n\t\t\trelease: db.prepare('RELEASE `\\t_bs3.\\t`', self, false),\r\n\t\t\trollbackTo: db.prepare('ROLLBACK TO `\\t_bs3.\\t`', self, false),\r\n\t\t};\r\n\t\tcontrollers.set(db, controller = {\r\n\t\t\tdefault: Object.assign({ begin: db.prepare('BEGIN', self, false) }, shared),\r\n\t\t\tdeferred: Object.assign({ begin: db.prepare('BEGIN DEFERRED', self, false) }, shared),\r\n\t\t\timmediate: Object.assign({ begin: db.prepare('BEGIN IMMEDIATE', self, false) }, shared),\r\n\t\t\texclusive: Object.assign({ begin: db.prepare('BEGIN EXCLUSIVE', self, false) }, shared),\r\n\t\t});\r\n\t}\r\n\treturn controller;\r\n};\r\n\r\n// Return a new transaction function by wrapping the given function\r\nconst wrapTransaction = (apply, fn, db, { begin, commit, rollback, savepoint, release, rollbackTo }) => function sqliteTransaction() {\r\n\tlet before, after, undo;\r\n\tif (db.inTransaction) {\r\n\t\tbefore = savepoint;\r\n\t\tafter = release;\r\n\t\tundo = rollbackTo;\r\n\t} else {\r\n\t\tbefore = begin;\r\n\t\tafter = commit;\r\n\t\tundo = rollback;\r\n\t}\r\n\tbefore.run();\r\n\ttry {\r\n\t\tconst result = apply.call(fn, this, arguments);\r\n\t\tafter.run();\r\n\t\treturn result;\r\n\t} catch (ex) {\r\n\t\tif (db.inTransaction) {\r\n\t\t\tundo.run();\r\n\t\t\tif (undo !== rollback) after.run();\r\n\t\t}\r\n\t\tthrow ex;\r\n\t}\r\n};\r\n"},"lineCount":76}},"error":null,"hash":"7fe05df10ec4b6a97b4caff949fb0df9","cacheData":{"env":{}}}